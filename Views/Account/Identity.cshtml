@using MultiFactor.SelfService.Windows.Portal.Core
@using MultiFactor.SelfService.Windows.Portal.Services.API
@using Resources
@model MultiFactor.SelfService.Windows.Portal.Models.IdentityModel

@{
    ViewBag.Title = string.Format(Global.SiteName, Configuration.Current.CompanyName);
}

<div action="#" class="login">
    <div class="form-column">
        <h2>@AccountLogin.Title</h2>
        @using (Html.BeginForm("Identity", "Account", new
                {
                    samlSessionId = Context.Request.QueryString[MultiFactorClaims.SamlSessionId] ?? string.Empty,
                    oidcSessionId = Context.Request.QueryString[MultiFactorClaims.OidcSessionId] ?? string.Empty
                }, FormMethod.Post, new { @class = "login-form" }))
        {
            <fieldset>
                @Html.AntiForgeryToken()
                <p>@AccountLogin.IdentityInvitation</p>
                <div class="form-row">
                    <div class="input">
                        <span>@Resources.AccountLogin.UserName</span>
                        @Html.TextBoxFor(m => m.UserName, new { placeholder = Configuration.Current.RequiresUpn ? AccountLogin.UserNameUpn : AccountLogin.UserName })
                        @Html.ValidationMessageFor(m => m.UserName)
                    </div>
                    @Html.ValidationSummary(true)

                    @if (Configuration.Current.RequireCaptchaOnLogin)
                    {
                        if (Configuration.Current.IsCaptchaEnabled(CaptchaType.Google))
                        {
                            <div class="g-recaptcha"
                                 data-sitekey="@Configuration.Current.CaptchaKey"
                                 data-callback="captchaCallback"
                                 data-size="normal">
                            </div>
                        }

                        if (Configuration.Current.IsCaptchaEnabled(CaptchaType.Yandex))
                        {
                            <div id="yandex-captcha-container"></div>
                        }
                    }

                </div>
                @if (Configuration.Current.EnablePasswordRecovery && Configuration.Current.EnablePasswordManagement)
                {
                    <div class="form-row">
                        <div class="bottom-field-link-r">
                            <a href="@Url.Action("Index", "ForgottenPassword")" class="forgotten-pwd-link">@Resources.AccountLogin.ResetPassword</a>
                        </div>
                    </div>
                }
                <div class="form-row">
                    <input type="hidden" name="myUrl" id="myUrl" />

                    @if (Configuration.Current.RequireCaptchaOnLogin)
                    {
                        <input type="hidden" name="responseToken" id="responseToken" />
                        <input type="submit" class="btn-primary w-100" disabled="disabled" value="@AccountLogin.Next" id="next" />
                    }
                    else
                    {
                        <input type="submit" class="btn-primary w-100" value="@AccountLogin.Next" id="next" />
                    }
                </div>
            </fieldset>
        }
    </div>
</div>

@section head {

    @if (Configuration.Current.RequireCaptchaOnLogin)
    {
        if (Configuration.Current.IsCaptchaEnabled(CaptchaType.Google))
        {
            <script src="https://www.google.com/recaptcha/api.js?hl=@LocalizationProvider.GetLanguage()" async defer></script>
        }

        if (Configuration.Current.IsCaptchaEnabled(CaptchaType.Yandex))
        {
            <script src="https://captcha-api.yandex.ru/captcha.js?render=onload&onload=yandexCaptchaLoadFunction"
                    defer></script>
        }
    }
}

<script type="text/javascript">
    function enableSubmit() {
        $("form").find(':submit').removeAttr('disabled');
    }

    function captchaCallback(token) {
        $('#responseToken').val(token);
        enableSubmit();
    }

    $(document).ready(function(){
        $('#myUrl').val(document.location);

        $("form").submit(function () {
            if ($(this).valid()) {
                $(this).find(':submit').attr('disabled', 'disabled').val('@AccountLogin.PleaseWait');
            }
        });
    });

    @if (Configuration.Current.IsCaptchaEnabled(CaptchaType.Yandex))
    {
        <text>
    function yandexCaptchaLoadFunction()
    {
        if (window.smartCaptcha)
        {
            const container = document.getElementById('yandex-captcha-container');
            window.smartCaptcha.render(container, {
                sitekey: '@Configuration.Current.CaptchaKey',
                callback: captchaCallback,
                hl: '@LocalizationProvider.GetLanguage()'
            });
        }
    }
    </text>
    }
</script>